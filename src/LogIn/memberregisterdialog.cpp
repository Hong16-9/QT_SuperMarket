#include "LogIn/memberregisterdialog.h"
#include "ui_memberregisterdialog.h"
#include <QMessageBox>
#include <QRegularExpression>
#include <QRegularExpressionValidator>

MemberRegisterDialog::MemberRegisterDialog(QWidget *parent) :
    QDialog(parent),
    ui(new Ui::MemberRegisterDialog),
    nameAutoGenerated(false)
{
    ui->setupUi(this);
    setWindowTitle("会员注册");
    setFixedSize(400, 250);

    // 设置手机号验证器
    QRegularExpression phoneRegex("^1[3-9]\\d{9}$");
    QRegularExpressionValidator *phoneValidator = new QRegularExpressionValidator(phoneRegex, this);
    ui->phoneEdit->setValidator(phoneValidator);

    // 设置生日日期选择器
    ui->birthdayEdit->setDate(QDate::currentDate());
    ui->birthdayEdit->setDisplayFormat("yyyy-MM-dd");
    ui->birthdayEdit->setCalendarPopup(true);

    // 设置姓名提示
    ui->nameEdit->setPlaceholderText("不填则默认使用手机尾号");

    // 连接信号
    connect(ui->phoneEdit, &QLineEdit::textChanged,
            this, &MemberRegisterDialog::onPhoneChanged);
    connect(ui->registerButton, &QPushButton::clicked,
            this, &MemberRegisterDialog::onRegisterClicked);
    connect(ui->resetButton, &QPushButton::clicked,
            this, &MemberRegisterDialog::onResetClicked);
    connect(ui->backButton, &QPushButton::clicked,
            this, &MemberRegisterDialog::onBackClicked);
}

MemberRegisterDialog::~MemberRegisterDialog()
{
    delete ui;
}

void MemberRegisterDialog::onPhoneChanged(const QString &text)
{
    // 当手机号达到11位且姓名为空时，自动生成尾号作为姓名
    if (text.length() == 11 && ui->nameEdit->text().isEmpty()) {
        QString tail = text.right(4); // 取最后4位作为尾号
        ui->nameEdit->setText("尾号" + tail);
        nameAutoGenerated = true;
    }
    // 如果用户开始输入姓名，取消自动标记
    else if (!ui->nameEdit->text().isEmpty() && nameAutoGenerated) {
        nameAutoGenerated = false;
    }
}

void MemberRegisterDialog::onRegisterClicked()
{
    QString phone = ui->phoneEdit->text().trimmed();
    QString name = ui->nameEdit->text().trimmed();
    QDate birthday = ui->birthdayEdit->date();

    // 验证输入
    if (phone.isEmpty()) {
        QMessageBox::warning(this, "注册失败", "手机号不能为空");
        return;
    }

    if (phone.length() != 11) {
        QMessageBox::warning(this, "注册失败", "手机号格式不正确");
        return;
    }

    // 如果用户清除了自动生成的姓名，重新生成
    if (name.isEmpty()) {
        QString tail = phone.right(4);
        name = "尾号" + tail;
        ui->nameEdit->setText(name);
        nameAutoGenerated = true;
    }

    // 检查手机号是否已注册
    if (DBManager::instance().getMemberByPhone(phone).contains("id")) {
        QMessageBox::warning(this, "注册失败", "该手机号已注册");
        return;
    }

    // 添加会员到数据库
    if (DBManager::instance().addMember(phone, name, 1.0, birthday.toString("yyyy-MM-dd"))) {
        QMessageBox::information(this, "成功", "会员注册成功！");

        // 生日当天注册提示
        if (birthday.month() == QDate::currentDate().month() &&
            birthday.day() == QDate::currentDate().day()) {
            QMessageBox::information(this, "生日快乐",
                "今天是您的生日，您将享受生日特别折扣！");
        }

        emit memberRegistered(phone, name, birthday);
        accept(); // 关闭对话框
    } else {
        QMessageBox::critical(this, "错误", "会员注册失败，请重试");
    }
}

void MemberRegisterDialog::onResetClicked()
{
    ui->phoneEdit->clear();
    ui->nameEdit->clear();
    ui->birthdayEdit->setDate(QDate::currentDate());
    nameAutoGenerated = false;
}

void MemberRegisterDialog::onBackClicked()
{
    reject(); // 关闭对话框
}
